basePath: /
definitions:
  model.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Books-api Application
  title: Books API
  version: "1.0"
paths:
  /books/:
    get:
      consumes:
      - application/json
      description: get books
      operationId: get-all-books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
        default:
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get all books
      tags:
      - books
  /books/:id:
    get:
      consumes:
      - application/json
      description: get book by id
      operationId: get-book-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
        default:
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get book By Id
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: update book
      operationId: update-book
      parameters:
      - description: Book info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
        default:
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update book
      tags:
      - books
    post:
      consumes:
      - application/json
      description: create book
      operationId: create-book
      parameters:
      - description: Book info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create book
      tags:
      - books
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
